# ---------------- global conf -----------------
global
#单个进程最大连接数
        maxconn         30000
        #全局的日志配置
        log             127.0.0.1 local0
        #使HAProxy进程进入后台运行
        daemon
        #创建3个进程进入deamon模式,运行如果没设置则默认为1.
        nbproc          5
        #bindcpu
        #对于后台服务器的探测，可以合并的进行合并。合并后inter，rise，fall等均使用首个探测到的server或其proxy的。
        check_merge
        #该配置项开启如下功能：如果请求的域名是ip，且去掉该ip后，请求有完整的 domain/url
        #的格式，则从请求中去掉该ip。
        #即：请求GET http://mzcdn.com/url 不处理
        #请求GET http://url 且url中不包含字符'/'， 不处理
        #请求GET http://192.168.1.1/mzcdn.com/url 去掉ip，更改请求为GET http://mzcdn.com/url
        #这里只描述了GET http://的请求，请求为GET /... 域名写在Host字段的请求类似处理。
        #mvipdomain
        #switch Receive buffer size
        #tune.rcvbuf.server  16384
        #haproxy重启时，先关闭端口，启动新的进程，但是旧的进程会等到已经服务的连接完成
        #后才退出。线上发现有的haproxy，重启后旧的进程长时间没有退出，使用这个配置后，如果
        #旧的haproxy进程超过这个时间没有退出，则强制退出。单位为秒。
        stopping_timeout 1800
        ipdb_config hot_tag hot10 HOT_RATE:70 DURATION:1800 HOT_LIMIT_REFER:6
        ipdb_config dis_hot all hot10
        access_log
defaults
#统计页面开关
        stats           enable
        #隐藏统计页面上HAProxy的版本信息
        stats           hide-version
        #统计页面url
        stats uri       /mzwitch?stats

# ----------------- frontend conf -----------------
# frontend根据任意 HTTP请求头内容做规则匹配，然后把请求定向到相关的backend
frontend public
#配置监听的端口，多个端口也可以配置成:88,:8080，端口之间用“,”号分隔，并且无空格
        bind            :80
        #默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK
        mode            http
        #应用全局的日志配置
#       log             global
#启用http日志格式
#       option          httplog
#httpclose选项删除任何Connection头，并增加一个Connection: close头,这样请求就不会保持
#keep-alive,不加此项配置默认为保持持久连接
#       option          httpclose
#网站健康检测URL，用来检测HAProxy管理的网站是否可以用，正常返回200，不正常返回500
        monitor-uri     /monitoruri
        #单个进程最大连接数
        maxconn         32768
        #客户端超时时间，等待客户端接收或发送数据的时间
        clitimeout      50000
        #5秒钟让客户端发送完整的HTTP请求,防止慢攻击
        timeout http-request 6s
        url_opt del mziphost
        url_opt none mzts_tag
        url_opt none mzid_tag
        url_opt del bip
        iphost_check mziphost

#lxmonitor
        #acl testdomainlist hdr_dom(host) -i lvs.lxdns.net
        #acl localgetlist url_reg ^cache_object://
        #use_backend lxmonitor if testdomainlist || localgetlist
        #acl select_url path_end -i streamStatusRealTime.jsp streamStatusHistory.jsp
        #use_backend lxmonitor if select_url
#url hash domains
#https
        bind *:443 ssl key /etc/ssl/inssl_mmzz_com/inssl_mmzz_com.key crt /etc/ssl/inssl_mmzz_com/inssl_mmzz_com.crt ca-file /etc/ssl/inssl_mmzz_com/inssl_mmzz_com.ca

        https_sni ssl_domain miclink.mmzz.com  crt /etc/ssl/inssl_mmzz_com/inssl_mmzz_com.crt  key /etc/ssl/inssl_mmzz_com/inssl_mmzz_com.key ca-file /etc/ssl/inssl_mmzz_com/inssl_mmzz_com.ca

        default_backend defaultProxyServers


#----------------- backend conf -----------------

backend defaultProxyServers
        mode            http
        #负载均衡的方式 按请求的相对uri进行hash，选择用于服务该请求的后端服务器
        # balance DHT 按请求的相对uri进行hash 适合于点播
        # balance DHT domain 按请求的域名进行hash 适合于图片
        # balance DHT serverName 在按内容分发的hash算法中，后端服务器使用名字字段而不是
        #ip+端口来作为标识。
        # balance DHT cdnsrcip 请求的cdnsrcip(即请求的来源)进行hash
        #balance roundrobin 按照URL轮询算法
        balance         roundrobin
        #连接超时
        contimeout      20000
        #服务器超时
        srvtimeout      240000
#       pconn           on
#       pconn_keepalive on
#       pconn_balance   on
#每次请求完毕后主动关闭http通道
        option          httpclose
        #禁止数据延迟 #在连接关闭时立即清理连接，减少处于FIN_WAIT1状态的连接
        option          nolinger
        # 如果后端服务器需要获得客户端的真实IP 需要配置次参数， 将可以从Http Header 中
        #获得客户端IP 创建HTTP 'Cdn-Src-Ip' header
        option          cdnsrcip
        #获得客户端IP 创建HTTP 'X-Forwarded-For' header
        option          forwardfor
        #心跳检测的URL,HTTP/1.0\r\nHost:XXXX,指定了心跳检测HTTP的版本，XXX为检测时请求
        #服务器的request中的域名是什么，这个在应用的检测URL对应的功能有对域名依赖的话需要设置
        option         httpchk GET /index.html
        #当serverId对应的服务器挂掉后，强制定向到其他健康的服务器
        option          redispatch
        #redispatch2次连接失败就认为是服务器不可用
        retries        2
        #acl    hot50 hot_refer HOT_RATE:80 DURATION:600 HOT_LIMIT_REFER:5
        #DHT_roundrobin all if hot50
#       hot_tab_uri hot50 /hotTableUri.h
        server lc_server_ip11 ip11:7481 check inter 15000 weight 10 port 7481 rise 2 fall 3
        server lc_server_ip22 ip22:7481 check inter 15000 weight 10 port 7481 rise 2 fall 3
